apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kinto.core.fullname" . }}
  labels:
    app: {{ template "kinto.fullname" . }}
    chart: {{ template "kinto.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: {{ template "kinto.core.fullname" . }}
spec:
  replicas: {{ .Values.core.replicas }}
  selector:
    matchLabels:
      app: {{ template "kinto.fullname" . }}
      release: {{ .Release.Name }}
      component: {{ template "kinto.core.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "kinto.fullname" . }}
        release: {{ .Release.Name }}
        component: {{ template "kinto.core.fullname" . }}
    spec:
      serviceAccountName: {{ template "kinto.core.fullname" . }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      containers:
      - name: main
        image: {{ .Values.repo }}/{{ .Values.core.image }}
        imagePullPolicy: {{ .Values.core.imagePullPolicy }}
        env:
        - name: GRPC_PORT
          value: "{{ .Values.core.grpc.port }}"
        - name: GRPC_WEB_PORT
          value: "{{ .Values.core.grpcWeb.port }}"
        - name: BUILD_API_HOST
          value: {{ template "kinto.builder.fullname" . }}:{{ .Values.builder.port }}
        - name: KINTO_DOMAIN
          value: "{{ .Values.common.domainName }}"
        - name: SSL_ENABLED
          value: "{{ .Values.common.ssl.enabled }}"
        - name: KINTO_CORE_NAMESPACE
          value: {{ .Release.Namespace }}
        {{- if or .Values.core.secretKey .Values.core.existingSecret }}
        - name: KINTO_CORE_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "kinto.core.fullname" . }}
              key: secretKey
        {{- end }}
        - name: KINTO_BUILDER_DOCKER_SECRET
          {{- if empty .Values.builder.workflow.docker.existingSecret }}
          value: {{ template "kinto.workflow.fullname" . }}-docker
          {{- else }}
          value: {{ .Values.builder.workflow.docker.existingSecret }}
          {{- end }}
        {{- if .Values.common.ssl.enabled }}
        - name: CERT_MANAGER_ISSUER_EMAIL
          value: "{{ .Values.common.ssl.issuer.email }}"
        - name: CERT_MANAGER_ISSUER_SERVER
          value: "{{ .Values.common.ssl.issuer.server }}"
        {{- end }}
        {{- range $key, $val := .Values.core.env }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        resources:
          {{- toYaml .Values.core.resources | nindent 10 }}
        ports:
        - containerPort: {{ .Values.core.grpcWeb.port }}
          name: "grpc-web"
          protocol: TCP
        - containerPort: {{ .Values.core.grpc.port }}
          name: "grpc"
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: {{ .Values.core.grpc.port }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.core.grpc.port }}